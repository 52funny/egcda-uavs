name: Rust

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  GITHUB_ACTIONS: 1

jobs:
  clippy-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out mcore repo
      uses: actions/checkout@v3
      with:
        repository: miracl/core
        path: ./core

    - name: Setup miracl core
      run: |
        cd core/rust
        echo -e "1\n28\n42\n0\n" | python3 config64.py
        cp -r mcore ../../
        cd ../../
        echo -e "[features]\nstd=[]" >> mcore/Cargo.toml

    - uses: actions/checkout@v3
      with:
        path: ./uav-schema

    - name: clippy
      run: cd uav-schema && cargo clippy --verbose
    - name: Run tests
      run: cd uav-schema && cargo test --verbose

  build-uav:
    name: Build uav on aarch64
    runs-on: ubuntu-latest
    steps:
    - name: Check out mcore repo
      uses: actions/checkout@v3
      with:
        repository: miracl/core
        path: ./core

    - name: Setup miracl core
      run: |
        cd core/rust
        echo -e "1\n28\n42\n0\n" | python3 config64.py
        cp -r mcore ../../
        cd ../../
        echo -e "[features]\nstd=[]" >> mcore/Cargo.toml

    - uses: actions/checkout@v3
      with:
        path: ./uav-schema
    - uses: uraimo/run-on-arch-action@v2
      with:
        arch: aarch64
        distro: ubuntu_latest
        env: |
          GITHUB_ACTIONS: 1
        run: |
          cd uav-schema
          apt update -q -y
          apt install curl build-essential pkg-config libssl-dev m4 -y
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source "$HOME/.cargo/env"
          cargo build -p uav --release
    - uses: actions/upload-artifact@v3
      with:
        name: uav
        path: |
          uav-schema/target/release/uav
          uav-schema/puf_py/


  build-ta-gs:
    name: Build TA and GS on x86_64
    runs-on: ubuntu-latest
    steps:
    - name: Check out mcore repo
      uses: actions/checkout@v3
      with:
        repository: miracl/core
        path: ./core

    - name: Setup miracl core
      run: |
        cd core/rust
        echo -e "1\n28\n42\n0\n" | python3 config64.py
        cp -r mcore ../../
        cd ../../
        echo -e "[features]\nstd=[]" >> mcore/Cargo.toml

    - uses: actions/checkout@v3
      with:
        path: ./uav-schema
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: -p gs -p ta --manifest-path ./uav-schema/Cargo.toml --release --target x86_64-unknown-linux-gnu
    - run: |
        cd ./uav-schema/target/x86_64-unknown-linux-gnu/release
        mkdir bin
        cp ta ./bin
        cp gs ./bin
        ls -alh .
        tree .

    - uses: actions/upload-artifact@v3
      with:
        name: ta-gs
        path: |
          ./uav-schema/target/x86_64-unknown-linux-gnu/release/bin/*
